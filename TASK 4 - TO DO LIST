#include <iostream>
#include <vector>
#include <string>
using namespace std;

class Task {
public:
    string description;
    bool isCompleted;

    Task(string desc) : description(desc), isCompleted(false) {}
};

class ToDoList {
private:
    vector<Task> tasks;

public:
    void addTask() {
        string taskDesc;
        cout << "Enter the task description: ";
        cin.ignore(); 
        getline(cin, taskDesc);
        Task newTask(taskDesc);
        tasks.push_back(newTask);
        cout << "Task added successfully.\n";
    }

    void viewTasks() {
        if (tasks.empty()) {
            cout << "No tasks available.\n";
        } else {
            cout << "Task List:\n";
            for (int i = 0; i < tasks.size(); i++) {
                cout << i + 1 << ". " << tasks[i].description << " ["
                     << (tasks[i].isCompleted ? "Completed" : "Pending") << "]\n";
            }
        }
    }

    void markTaskCompleted() {
        int taskNumber;
        cout << "Enter the task number to mark as completed: ";
        cin >> taskNumber;
        
        if (taskNumber >= 1 && taskNumber <= tasks.size()) {
            tasks[taskNumber - 1].isCompleted = true;
            cout << "Task marked as completed.\n";
        } else {
            cout << "Invalid task number.\n";
        }
    }

    void removeTask() {
        int taskNumber;
        cout << "Enter the task number to remove: ";
        cin >> taskNumber;

        if (taskNumber >= 1 && taskNumber <= tasks.size()) {
            tasks.erase(tasks.begin() + taskNumber - 1);
            cout << "Task removed successfully.\n";
        } else {
            cout << "Invalid task number.\n";
        }
    }
};

int main() {
    ToDoList todo;
    int choice;

    while (true) {
        cout << "\nTo-Do List Manager\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Completed\n";
        cout << "4. Remove Task\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                todo.addTask();
                break;
            case 2:
                todo.viewTasks();
                break;
            case 3:
                todo.markTaskCompleted();
                break;
            case 4:
                todo.removeTask();
                break;
            case 5:
                cout << "Exiting program.\n";
                return 0;
            default:
                cout << "Invalid choice. Please try again.\n";
        }
    }

    return 0;
}
